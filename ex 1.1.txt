Ex 1.1
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URI;
import java.net.SocketTimeoutException;
public class Httpsimulation{
	public static void main(String[] args){
		String urlString = "https://www.bbc.com";
		HttpURLConnection connection =null;
		BufferedReader reader =null;
	    try{
               URI ur=URI.create(urlString);
               URL url =ur.toURL();
	       connection = (HttpURLConnection) url.openConnection();
	       connection.setRequestMethod("GET");
	       connection.setConnectTimeout(5000);
	       connection.setReadTimeout(5000);
	       connection.connect();
	       int responsecode = connection.getResponseCode();
	       if(responsecode != HttpURLConnection.HTTP_OK) {
                      System.out.println("Failed to fetch content.HTTP response code: "+responsecode);
		      return;
		}
               reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
	       StringBuilder content = new StringBuilder();
	       String line;
	       while((line = reader.readLine()) != null){
                     content.append(line).append("\n");
		     if(content.length() >= 500) {
			break;
			}
		}
               String result = content.toString();
	       if(result.length() >500){
                   result=result.substring(0,500);
		}
		System.out.println("First 500 characters of the page content:\n");
                System.out.println(result);
              }

              catch(MalformedURLException e){
                   System.out.println("invalid URL format:"+e.getMessage());
		}
	      catch(SocketTimeoutException e){
                   System.out.println("connection timeout:"+e.getMessage());
		}
              catch(Exception e){
                   System.out.println("Error occurred:"+e.getMessage());
		}
	      finally{
                 try{
                   if(reader!=null)
                      reader.close();
                    if(connection != null)
                      connection.disconnect();
		     }
		 catch(Exception e){
                    System.out.println("Error closing resources:" +e.getMessage());
                 }
              }
         }
     }
		
		